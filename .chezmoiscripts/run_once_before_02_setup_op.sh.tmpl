{{ if eq .chezmoi.os "darwin" -}}
#!/bin/bash

set -eo pipefail

if ! command -v op &>/dev/null; then
    echo "1Password CLI (op) not found. Installing via Homebrew..."

    if ! command -v brew &>/dev/null; then
        echo "Homebrew not found. Please install Homebrew first."
        exit 1
    fi

    # Try the formula first, fall back to cask if necessary
    if ! brew install 1password-cli 2>/dev/null; then
        if ! brew install --cask 1password-cli 2>/dev/null; then
            echo "Failed to install 1Password CLI via Homebrew. Please install it manually: https://developer.1password.com/docs/command-line/get-started/"
            exit 1
        fi
    fi
fi

# Check whether the CLI is already signed in
if op whoami &>/dev/null; then
    echo "1Password CLI already signed in."
    exit 0
fi

echo "1Password CLI is not signed in. Running 'op signin' to sign in interactively."

# Ask the user if they want to provide host/email/secret key (non-empty -> use non-interactive signin parameters)
read -rp "Enter your 1Password account host (e.g. my.1password.com) or press Enter to use interactive signin: " OP_HOST
if [ -z "$OP_HOST" ]; then
    # Interactive sign-in will prompt for the rest (and will also open a browser for 2FA if necessary)
    op signin
else
    read -rp "Enter your 1Password account email: " OP_EMAIL
    read -rp "Enter your 1Password secret key: " OP_SECRET

    # 'op signin' without --raw prints shell exports in some shells; run it so the user can follow prompts for master password / MFA
    op signin "$OP_HOST" "$OP_EMAIL" "$OP_SECRET"
fi

# Verify signin
if op whoami &>/dev/null; then
    echo "1Password CLI signed in successfully."
else
    echo "1Password CLI sign-in failed. Please run 'op signin' manually and re-run chezmoi if needed."
    exit 1
fi
{{ end -}}