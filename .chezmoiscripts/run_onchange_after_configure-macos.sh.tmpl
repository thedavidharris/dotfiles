{{ if (eq .chezmoi.os "darwin") -}}
#!/usr/bin/env bash

#
# Sources from ~/.macos ‚Äî https://mths.be/macos
#
# This script configures macOS system preferences, applications, and developer tools.
# It focuses on developer productivity, security, and UI/UX improvements.
#
# To monitor changes, you can use:
#   sudo fs_usage | grep plist
#   sudo opensnoop | grep plist
#
# To see all domains an app uses:
#   defaults domains | tr ',' '\n' | grep -i appname
#

# ---
# Initial Setup
# ---

# Exit immediately if a command exits with a non-zero status.
# Treat unset variables as an error.
# Prevent errors in a pipeline from being masked.
set -euo pipefail

# Close any open System Preferences panes to prevent them from overriding settings.
echo "üçé Preparing to configure macOS. Closing System Preferences..."
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront.
echo "üîë Please enter your password to grant administrator privileges."
sudo -v

# Keep the sudo timestamp alive until the script has finished.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo "üöÄ Starting macOS configuration..."

# ---
# Helper Functions
# ---

# Safely write defaults for applications that might be sandboxed or not installed.
safe_defaults_write() {
    local domain="$1"
    local key="$2"
    local type="$3"
    local value="$4"

    if ! defaults write "$domain" "$key" "$type" "$value" 2>/dev/null; then
        echo "‚ö†Ô∏è  Could not set '$key' for '$domain' (app may be sandboxed or not installed)."
    fi
}

###############################################################################
# General UI/UX                                                               #
###############################################################################

echo "‚öôÔ∏è  Configuring General UI/UX settings..."

# Increase window resize speed for Cocoa applications.
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save and print panels by default.
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not iCloud) by default.
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Automatically quit the printer app once print jobs are complete.
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Disable the "Are you sure you want to open this application?" dialog.
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Remove duplicates in the "Open With" menu.
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -delete -r -domain local -domain system -domain user

# Disable Resume system-wide.
defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# Disable automatic termination of inactive apps.
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window.
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Set a custom wallpaper image (example, requires modification).
# rm -rf ~/Library/Application\ Support/Dock/desktoppicture.db
# sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# sudo ln -s /path/to/your/image.jpg /System/Library/CoreServices/DefaultDesktop.jpg

###############################################################################
# Keyboard, Text Input & Language                                             #
###############################################################################

echo "‚å®Ô∏è  Configuring Keyboard and Text Input..."

# Disable automatic capitalization.
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes.
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable automatic period substitution.
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes.
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable auto-correct.
# defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Enable full keyboard access for all controls (e.g., Tab in modal dialogs).
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# Disable press-and-hold for keys in favor of key repeat.
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a fast keyboard repeat rate (uncomment to apply).
# defaults write NSGlobalDomain KeyRepeat -int 1
# defaults write NSGlobalDomain InitialKeyRepeat -int 10

# Set language and text formats (example for US).
defaults write NSGlobalDomain AppleLanguages -array "en-US" "us"
defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Inches"
defaults write NSGlobalDomain AppleMetricUnits -bool false

# Show language menu in the top right corner of the boot screen.
sudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool true

###############################################################################
# Trackpad & Mouse                                                            #
###############################################################################

echo "üñ±Ô∏è  Configuring Trackpad and Mouse..."

# Enable tap to click for this user and for the login screen.
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

# Map bottom right corner of trackpad to right-click.
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

###############################################################################
# Sound & Bluetooth                                                           #
###############################################################################

echo "üîä Configuring Sound and Bluetooth..."

# Increase sound quality for Bluetooth headphones/headsets.
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

# Disable the system alert sound but enable volume change feedback.
defaults write NSGlobalDomain com.apple.sound.beep.volume -int 0
defaults write NSGlobalDomain com.apple.sound.uiaudio.enabled -int 0
defaults write NSGlobalDomain com.apple.sound.beep.feedback -bool true

###############################################################################
# Energy Saving                                                               #
###############################################################################

echo "‚ö°Ô∏è  Configuring Energy Saving settings..."

# Enable lid wakeup.
sudo pmset -a lidwake 1

# Sleep the display after 5 minutes (example).
# sudo pmset -a displaysleep 5

###############################################################################
# Screen & Screenshots                                                        #
###############################################################################

echo "üñ•Ô∏è  Configuring Screen and Screenshot settings..."

# Require password immediately after sleep or screen saver begins.
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop in PNG format.
defaults write com.apple.screencapture location -string "${HOME}/Desktop"
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots.
defaults write com.apple.screencapture disable-shadow -bool true

# Enable subpixel font rendering on non-Apple LCDs.
defaults write NSGlobalDomain AppleFontSmoothing -int 1

# Enable HiDPI display modes (requires restart).
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

###############################################################################
# Finder                                                                      #
###############################################################################

echo "üìÇ Configuring Finder..."

# Allow quitting Finder via ‚åò + Q.
defaults write com.apple.finder QuitMenuItem -bool true

# Set Home as the default location for new Finder windows.
defaults write com.apple.finder NewWindowTarget -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

# Show icons for hard drives, servers, and removable media on the desktop.
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Show all filename extensions.
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Show status bar and path bar.
defaults write com.apple.finder ShowStatusBar -bool true
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title.
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# Keep folders on top when sorting by name.
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# When searching, search the current folder by default.
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension.
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Avoid creating .DS_Store files on network or USB volumes.
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Use list view in all Finder windows by default (`icnv`, `clmv`, `glyv`).
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Disable the warning before emptying the Trash.
defaults write com.apple.finder WarnOnEmptyTrash -bool false

# Show the ~/Library and /Volumes folders.
chflags nohidden ~/Library
sudo chflags nohidden /Volumes

# Enable text selection in Quick Look.
defaults write com.apple.finder QLEnableTextSelection -bool true

###############################################################################
# Dock, Dashboard, and Hot Corners                                            #
###############################################################################

echo "DockÔ∏è‚É£ Configuring Dock..."

# Automatically hide and show the Dock.
defaults write com.apple.dock autohide -bool true

# Make Dock icons of hidden applications translucent.
defaults write com.apple.dock showhidden -bool true

# Don‚Äôt show recent applications in Dock.
defaults write com.apple.dock show-recents -bool false

# Enable Dashboard dev mode (allows keeping widgets on the desktop).
defaults write com.apple.dashboard devmode -bool true

###############################################################################
# Safari & WebKit                                                             #
###############################################################################

echo "üåê Configuring Safari..."

# Show the full URL in the address bar.
safe_defaults_write com.apple.Safari ShowFullURLInSmartSearchField -bool true

# Prevent Safari from opening ‚Äòsafe‚Äô files automatically.
safe_defaults_write com.apple.Safari AutoOpenSafeDownloads -bool false

# Enable the Develop menu and the Web Inspector.
safe_defaults_write com.apple.Safari IncludeDevelopMenu -bool true
safe_defaults_write com.apple.Safari IncludeInternalDebugMenu -bool true

# Auto-clear downloads list.
safe_defaults_write com.apple.Safari DownloadsClearingPolicy -int 2

###############################################################################
# Mail                                                                        #
###############################################################################

echo "‚úâÔ∏è  Configuring Mail..."

# Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>`.
safe_defaults_write com.apple.mail AddressesIncludeNameOnPasteboard -bool false

###############################################################################
# Terminal & iTerm 2                                                          #
###############################################################################

echo "üßë‚Äçüíª Configuring Terminal & iTerm2..."

# Only use UTF-8 in Terminal.app.
defaults write com.apple.terminal StringEncodings -array 4

# Enable Secure Keyboard Entry in Terminal.app.
defaults write com.apple.terminal SecureKeyboardEntry -bool true

# Don‚Äôt display the annoying prompt when quitting iTerm.
safe_defaults_write com.googlecode.iterm2 PromptOnQuit -bool false

###############################################################################
# Activity Monitor                                                            #
###############################################################################

echo "üìà Configuring Activity Monitor..."

# Show the main window when launching.
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Visualize CPU usage in the Dock icon.
defaults write com.apple.ActivityMonitor IconType -int 5

# Show all processes.
defaults write com.apple.ActivityMonitor ShowCategory -int 0

# Sort results by CPU usage.
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

###############################################################################
# Other Applications (TextEdit, Photos, etc.)                                 #
###############################################################################

echo "üì¶ Configuring other applications..."

# Use plain text mode for new TextEdit documents and use UTF-8.
defaults write com.apple.TextEdit RichText -int 0
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

# Prevent Photos from opening automatically when devices are plugged in.
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

# Disable smart quotes in Messages.
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false

# Auto-play videos in QuickTime Player.
defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool true

###############################################################################
# Third-Party Apps (Chrome, Xcode)                                            #
###############################################################################

echo "üõ†Ô∏è  Configuring third-party developer apps..."

# --- Google Chrome ---
# Disable backswipe on Magic Mouse.
safe_defaults_write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
safe_defaults_write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false

# Use the system-native print preview dialog.
safe_defaults_write com.google.Chrome DisablePrintPreview -bool true
safe_defaults_write com.google.Chrome.canary DisablePrintPreview -bool true

# --- Xcode ---
# Note: These settings apply if Xcode is installed.
safe_defaults_write com.apple.dt.Xcode DVTTextEditorTrimTrailingWhitespace -bool true
safe_defaults_write com.apple.dt.Xcode DVTTextShowLineNumbers -bool true
safe_defaults_write com.apple.dt.Xcode ShowBuildOperationDuration -bool true
safe_defaults_write com.apple.dt.Xcode IDECommandClickNavigates -bool true
safe_defaults_write com.apple.dt.Xcode XcodeCloudUpsellPromptEnabled -bool false

# --- Android Studio ---
if [[ -d "/Applications/Android Studio.app" ]]; then
    echo "‚ÑπÔ∏è  Android Studio is installed. Remember to configure fonts manually via:"
    echo "   Settings > Editor > Font"
fi

###############################################################################
# Finalizing                                                                  #
###############################################################################

# This loop kills and restarts affected applications to apply the changes.
echo "‚úÖ Configuration complete. Applying settings by restarting affected apps..."

for app in "Activity Monitor" \
  "Dock" \
  "Finder" \
  "Mail" \
  "Messages" \
  "Photos" \
  "Safari" \
  "SystemUIServer" \
  "Terminal"; do
  # Use killall quietly. If an app isn't running, it will do nothing.
  killall "${app}" &> /dev/null || true
done

echo "üéâ All done! Note: Some changes may require a logout or restart to take full effect."


{{ end -}}
