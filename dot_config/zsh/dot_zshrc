# =============================================================================
# ZSH CONFIGURATION
# Modern, fast, and organized zsh setup with Zephyr framework
# =============================================================================

# Performance profiling (uncomment to profile startup time)
# zmodload zsh/zprof

# =============================================================================
# PLUGIN MANAGEMENT (ANTIDOTE)
# =============================================================================

# Antidote plugin manager configuration
zsh_plugins_file="${ZDOTDIR:-$HOME}/.zplugins"
zsh_static_file="${ZDOTDIR:-$HOME}/.zsh_plugins.zsh"

# Check if the static file needs to be regenerated
# This happens if it doesn't exist, or if the source .txt file is newer.
if [[ ! "$zsh_static_file" -nt "$zsh_plugins_file" ]]; then
  echo "Antidote: Regenerating static plugin file..."
  (
    # Source antidote in a subshell to keep the main shell clean
    source "${ZDOTDIR:-$HOME}/.antidote/antidote.zsh"
    # Bundle the plugins from the .txt file into the static .zsh file
    antidote bundle <"$zsh_plugins_file" >"$zsh_static_file"
  )
fi

# Source the fast, static, pre-compiled file on every startup
source "$zsh_static_file"

# =============================================================================
# ZEPHYR FRAMEWORK CONFIGURATION
# =============================================================================

# Zephyr history configuration
zstyle ':zephyr:plugin:history' use-xdg-basedirs true

# Override Zephyr's history settings
setopt share_history

# =============================================================================
# COMPLETION & SUGGESTIONS
# =============================================================================

# Autosuggest configuration for better UX
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=()
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS+=(forward-char forward-word end-of-line)
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(bracketed-paste history-substring-search-up history-substring-search-down expand-or-complete accept-line push-line-or-edit)
ZSH_AUTOSUGGEST_STRATEGY=(history)
ZSH_AUTOSUGGEST_USE_ASYNC=true  # Enable async for better performance

# fzf-tab configuration for fish-like completion
zstyle ':fzf-tab:*' switch-group ',' '.'
zstyle ':completion:*' fzf-search-display true

# Enhanced fzf-tab settings
zstyle ':fzf-tab:complete:*' fzf-bindings 'ctrl-a:select-all,ctrl-d:deselect-all'
zstyle ':fzf-tab:complete:*' fzf-flags '--height=40% --layout=reverse --border'
zstyle ':fzf-tab:complete:*' fzf-preview 'echo {}'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color=always {}'
zstyle ':fzf-tab:complete:git:*' fzf-preview 'git log --oneline --graph --color=always {}'

# Key bindings
bindkey '^[q' push-line-or-edit           # Alt-q: push current line to buffer
bindkey '^U' backward-kill-line           # Ctrl-U: kill line to beginning
bindkey '^K' kill-line                    # Ctrl-K: kill line to end
bindkey '^W' backward-kill-word           # Ctrl-W: kill word backward
bindkey '^[b' backward-word               # Alt-B: move word backward
bindkey '^[f' forward-word                # Alt-F: move word forward

# Completion behavior:
# - Tab: Interactive completion with fuzzy search (fzf-tab)
# - Right Arrow: Accept history suggestions (zsh-autosuggestions)
# - Shift+Tab: Reverse cycle through completions (fzf-tab)
# - Enter: Accept completion (fzf-tab)
# - Esc: Cancel completion (fzf-tab)

# History search (smart up/down arrows) - using substring search
bindkey '\e[A' history-substring-search-up     # Up arrow: search history backward (substring)
bindkey '\eOA' history-substring-search-up     # Up arrow (alternate): search history backward (substring)
bindkey '\e[B' history-substring-search-down   # Down arrow: search history forward (substring)
bindkey '\eOB' history-substring-search-down   # Down arrow (alternate): search history forward (substring)

# Additional useful bindings
bindkey '^R' history-incremental-search-backward # Ctrl-R: reverse search
bindkey '^S' history-incremental-search-forward  # Ctrl-S: forward search

# Preserve original incremental search widgets
zle -A {.,}history-incremental-search-forward
zle -A {.,}history-incremental-search-backward

# =============================================================================
# SYNTAX HIGHLIGHTING
# =============================================================================

# Syntax highlighting configuration
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)

# LS_COLORS - use vivid (cached for performance)
if command -v vivid >/dev/null 2>&1; then
  export LS_COLORS="$(vivid generate catppuccin-macchiato)"
fi

# =============================================================================
# PROMPT & TOOL INITIALIZATION
# =============================================================================

# Initialize tools (conditional for better performance)
if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
fi

# Lazy load mise for faster startup
if command -v mise >/dev/null 2>&1; then
  # Lazy load mise - only activate when needed
  mise() {
    unfunction mise
    eval "$(mise activate zsh)"
    mise "$@"
  }
fi

# Lazy load zoxide for faster startup
if command -v zoxide >/dev/null 2>&1; then
  # Lazy load zoxide - only activate when needed
  z() {
    unfunction z
    eval "$(zoxide init zsh)"
    z "$@"
  }
fi

# =============================================================================
# PERFORMANCE MONITORING
# =============================================================================

# Uncomment to profile startup time
# zprof

# Performance monitoring function
if [[ "$ZSH_PROFILE" == "1" ]]; then
  zmodload zsh/zprof
  zprof
fi
